import pygraphviz as pgv

g=pgv.AGraph(directed=True, rankdir='TD', compound=True)

g.add_node("self.z")
g.add_node("self.realData")
g.add_node("self.batchData")

g.add_node("v")
g.add_node("NiceNetworkOperator0,ifMH = False",shape='box')
g.add_edge("self.z","NiceNetworkOperator0,ifMH = False")
g.add_edge("v","NiceNetworkOperator0,ifMH = False")
g.add_node("self.v_")
g.add_node("self.z_")
g.add_edge("NiceNetworkOperator0,ifMH = False","self.v_")
g.add_edge("NiceNetworkOperator0,ifMH = False","self.z_")

g.add_node("v_")
g.add_node("NiceNetworkOperator1,ifMH = True",shape='box')
g.add_node("z1")
g.add_node("v1")
g.add_edge("self.z","NiceNetworkOperator1,ifMH = True")
g.add_edge("v_","NiceNetworkOperator1,ifMH = True")
g.add_edge("NiceNetworkOperator1,ifMH = True","z1")
g.add_edge("NiceNetworkOperator1,ifMH = True","v1")

g.add_node("tf.stop_gradient",shape='box')
g.add_edge("z1","tf.stop_gradient")
g.add_node("z1_")
g.add_edge("tf.stop_gradient","z1_")

g.add_node("v1_")
g.add_node("NiceNetworkOperator2,ifMH = True",shape='box')
g.add_edge("self.realData","NiceNetworkOperator2,ifMH = True")#,label="abc")
g.add_edge("v1_","NiceNetworkOperator2,ifMH = True")
g.add_edge("NiceNetworkOperator2,ifMH = True","z2")
g.add_edge("NiceNetworkOperator2,ifMH = True","v2")

g.add_node("v2_")
g.add_node("NiceNetworkOperator3,ifMH = True",shape='box')
g.add_edge("v2_","NiceNetworkOperator3,ifMH = True")
g.add_edge("z1_","NiceNetworkOperator3,ifMH = True")
g.add_edge("NiceNetworkOperator3,ifMH = True","z3")
g.add_edge("NiceNetworkOperator3,ifMH = True","v3")

g.add_node(41,label = "tf.concat",shape='box')
g.add_node("zConcated")
#g.add_edge("self.realData","tf.concat")
g.add_edge("z1",41)
g.add_edge("z2",41)
g.add_edge("z3",41)
g.add_edge(41,"zConcated")

g.add_node(42,label = "tf.concat",shape='box')
g.add_node("vConcated")
g.add_edge("v1",42)
g.add_edge("v2",42)
g.add_edge("v3",42)
g.add_edge(42,"vConcated")

g.add_node("realData")
g.add_node("batchData")
g.add_node(43,label = "tf.reshape",shape='box')
g.add_node(44,label = "tf.reshape",shape='box')
g.add_edge("self.realData",43)
g.add_edge(43,"realData")
g.add_edge("self.batchData",44)
g.add_edge(44,"batchData")

g.add_node("GVar")
g.add_edge("GVar","NiceNetworkOperator0,ifMH = False")
g.add_edge("GVar","NiceNetworkOperator1,ifMH = True")
g.add_edge("GVar","NiceNetworkOperator2,ifMH = True")
g.add_edge("GVar","NiceNetworkOperator3,ifMH = True")

g.add_node("rD")
g.add_node("fD")
g.add_node("self.discriminator0",shape='box')
g.add_node("self.discriminator1",shape='box')
g.add_node("DVar")
g.add_edge("DVar","self.discriminator0")
g.add_edge("DVar","self.discriminator1")
g.add_edge("realData","self.discriminator0")
g.add_edge("zConcated","self.discriminator1")
g.add_edge("self.discriminator0","rD")
g.add_edge("self.discriminator1","fD")

g.add_node("epsilon")
g.add_node("-",shape='box')
g.add_node("1")
g.add_edge("1","-")
g.add_edge("epsilon","-")
g.add_node("*",shape='box')
g.add_edge("-","*")
g.add_edge("zConcated","*")
g.add_node("+",shape='box')
g.add_edge("*","+")
g.add_node(4,label = "*",shape='box')
g.add_edge("epsilon",4)
g.add_edge("batchData",4)
g.add_edge(4,"+")
g.add_node("hat")
g.add_edge("+","hat")
g.add_node("self.discriminator2",shape='box')
g.add_edge("DVar","self.discriminator2")
g.add_edge("hat","self.discriminator2")
g.add_node("hatD")
g.add_edge("self.discriminator2","hatD")
g.add_node("tf.gradients",shape='box')
g.add_edge("hat","tf.gradients")
g.add_edge("hatD","tf.gradients")
g.add_node("tf.norm,axis=1",shape='box')
g.add_edge("tf.gradients","tf.norm,axis=1")
g.add_node("scale")
g.add_node(3,label = "*",shape='box')
g.add_node("1.0")
g.add_node(2,label="-",shape='box')
g.add_edge("1.0",2)
g.add_edge("tf.norm,axis=1",2)
g.add_node("tf.square")
g.add_edge(2,"tf.square")
g.add_edge("tf.square",3)
g.add_edge("scale",3)
g.add_node("tf.reduce_mean",shape='box')
g.add_edge(3,"tf.reduce_mean")
g.add_node("gradientHatD",shape='box')
g.add_edge("tf.reduce_mean","gradientHatD")

g.add_node(11,label = "tf.reduce_mean",shape='box')
g.add_node(12,label = "tf.reduce_mean",shape='box')
g.add_edge("rD",11)
g.add_edge("fD",12)
g.add_node(13,label="-",shape='box')
g.add_edge(11,13)
g.add_edge(12,13)
g.add_node(14,label = "+",shape='box')
g.add_edge("gradientHatD",14)
g.add_edge(13,14)
g.add_node("self.Dloss")
g.add_edge(14,"self.Dloss")

g.add_node(21,label="+",shape='box')
g.add_edge(12,21)
g.add_node(22,label="tf.reduce_mean",shape='box')
g.add_node("0.5")
g.add_node(23,label="*",shape='box')
g.add_edge("0.5",23)
g.add_node(24,label = "tf.square",shape='box')
g.add_edge("vConcated",24)
g.add_edge(24,23)
g.add_edge(23,22)
g.add_node("eta")
g.add_node(25,label = "*",shape='box')
g.add_edge("eta",25)
g.add_edge(22,25)
g.add_edge(25,21)
g.add_node("self.Gloss")
g.add_edge(21,"self.Gloss")

g.add_edge("self.Gloss",31)
g.add_edge("self.Dloss",32)
g.add_node(31,label="tf.train.AdamOptimizer.minimize",shape='box')
g.add_node(32,label="tf.train.AdamOptimizer.minimize",shape='box')
g.add_node("self.trainG")
g.add_node("self.trainD")
g.add_edge(31,"self.trainG")
g.add_edge(32,"self.trainD")

g.layout('dot')
g.draw('file.png')